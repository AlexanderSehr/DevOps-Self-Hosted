name: 'ScaleSet Deployment'

parameters:
  - name: startEnvironment
    displayName: Environment to start from
    type: string
    default: sbx
    values:
      - sbx
      - dev
      - prd
  - name: deploymentsToPerform
    displayName: Scope of deployment
    type: string
    default: Only Scale Set
    values:
      - All
      - Only Scale Set
      - Only Agent Pool registration
  - name: setAgentPool
    displayName: Add/Update agent pool
    type: boolean
    default: true
variables:
  - template: variables.yml

trigger: none

stages:
  - stage: SBX_Deployments
    displayName: Deploy to SBX
    condition: and(succeeded(), eq('${{ parameters.startEnvironment }}', 'sbx'))
    jobs:
      - template: .templates/pipeline.scaleset.jobs.yml
        parameters:
          environment: 'sbx'
          deploymentsToPerform: '${{ parameters.deploymentsToPerform }}'
          setAgentPool: '${{ parameters.setAgentPool }}'

  - stage: DEV_Deployments
    displayName: Deploy to DEV
    condition: and(succeeded(), in('${{ parameters.startEnvironment }}', 'sbx', 'dev'))
    jobs:
      - template: .templates/pipeline.scaleset.jobs.yml
        parameters:
          environment: 'dev'
          deploymentsToPerform: '${{ parameters.deploymentsToPerform }}'
          setAgentPool: '${{ parameters.setAgentPool }}'

  - stage: PRD_Deployments
    displayName: Deploy to PRD
    condition: and(succeeded(),in('${{ parameters.startEnvironment }}', 'sbx', 'dev', 'prd'))
    jobs:
      - template: .templates/pipeline.scaleset.jobs.yml
        parameters:
          environment: 'prd'
          deploymentsToPerform: '${{ parameters.deploymentsToPerform }}'
          setAgentPool: '${{ parameters.setAgentPool }}'
